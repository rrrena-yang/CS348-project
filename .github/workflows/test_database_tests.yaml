name: MySQL CI

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          MYSQL_ROOT_PASSWORD: MySQL030927
          MYSQL_DATABASE: test_db

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get MySQL container ID
      id: mysql_container
      run: echo "::set-output name=id::$(docker ps -q -f ancestor=mysql:latest)"

    - name: Wait for MySQL
      run: |
        for i in {30..0}; do
          if [ "$(docker inspect --format='{{.State.Health.Status}}' ${{steps.mysql_container.outputs.id}})" == "healthy" ]; then
            echo "MySQL is healthy"
            break
          fi
          echo 'Waiting for MySQL to be healthy...'
          sleep 1
        done

    - name: Check MySQL container logs
      run: docker logs ${{steps.mysql_container.outputs.id}}

    - name: Run bootstrap_test.sh inside MySQL container
      run: |
        docker exec -i ${{steps.mysql_container.outputs.id}} sh -c 'exec /path/to/bootstrap_test.sh'

    - name: Run sample queries and check outputs
      run: |
        find sample-query -type f -name '*.sql' | while read -r sql_file; do
          base_name=$(basename "$sql
